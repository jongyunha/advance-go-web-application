// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package module

import (
	"github.com/google/wire"
	"github.com/jmoiron/sqlx"
	"github.com/jongyunha/advance-go-web-application/api/entity"
	"github.com/jongyunha/advance-go-web-application/api/service"
)

// Injectors from repository.go:

func InitializeUserRepository(db *sqlx.DB) entity.UserRepository {
	defaultUserRepository := entity.NewDefaultUserRepository(db)
	return defaultUserRepository
}

// Injectors from service.go:

func InitializeUserService(db *sqlx.DB) service.UserService {
	sqlxTransactionManager := entity.NewSqlxTransactionManager(db)
	defaultUserRepository := entity.NewDefaultUserRepository(db)
	defaultUserService := service.NewDefaultUserService(sqlxTransactionManager, defaultUserRepository)
	return defaultUserService
}

// repository.go:

var userRepositorySet = wire.NewSet(entity.NewDefaultUserRepository, wire.Bind(new(entity.UserRepository), new(*entity.DefaultUserRepository)))

// service.go:

var userServiceSet = wire.NewSet(entity.NewSqlxTransactionManager, entity.NewDefaultUserRepository, wire.Bind(new(entity.UserRepository), new(*entity.DefaultUserRepository)), wire.Bind(new(entity.TransactionManager), new(*entity.SqlxTransactionManager)), service.NewDefaultUserService, wire.Bind(new(service.UserService), new(*service.DefaultUserService)))
